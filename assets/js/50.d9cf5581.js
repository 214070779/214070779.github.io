(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{400:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"block-本质"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#block-本质"}},[s._v("#")]),s._v(" block 本质")]),s._v(" "),t("p",[s._v("Block 本质上是一个 Objective-C 的对象，它内部也有一个 isa 指针，它是一个封装了函数及函数调用环境的 Objective-C 对象，可以添加到 NSArray 及 NSDictionary 等集合中，它是基于 C 语言及运行时特性，有点类似标准的 C 函数。但除了可执行代码以外，另外包含了变量同堆或栈的自动绑定。")]),s._v(" "),t("h2",{attrs:{id:"block-类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#block-类型"}},[s._v("#")]),s._v(" Block 类型")]),s._v(" "),t("h3",{attrs:{id:"nsglobalblock-全局block"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nsglobalblock-全局block"}},[s._v("#")]),s._v(" NSGlobalBlock 全局block")]),s._v(" "),t("div",{staticClass:"language-objectivec line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objectivec"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),s._v("exampleBlock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// block")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NSLog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"exampleBlock is: %@"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("exampleBlock class"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("打印日志：exampleBlock is: "),t("strong",[s._v("NSGlobalBlock")])]),s._v(" "),t("p",[s._v("如果一个 block 没有访问外部局部变量，或者访问的是全局变量，或者静态局部变量，此时的 block 就是一个全局 block ，并且数据存储在全局区。")]),s._v(" "),t("h3",{attrs:{id:"nsstackblock-栈block"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nsstackblock-栈block"}},[s._v("#")]),s._v(" NSStackBlock 栈block")]),s._v(" "),t("div",{staticClass:"language-objectivec line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objectivec"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" temp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),s._v("exampleBlock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// block")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NSLog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"exampleBlock is: %d"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" temp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NSLog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"exampleBlock is: %@"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("exampleBlock class"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("打印日志：exampleBlock is: "),t("strong",[s._v("NSMallocBlock")]),s._v("？？？不是说好的 "),t("strong",[s._v("NSStackBlock")]),s._v(" 的吗？为什么打印的是__NSMallocBlock__ 呢？这里是因为我们使用了 ARC ，Xcode 默认帮我们做了很多事情。")]),s._v(" "),t("p",[s._v("我们可以去 Build Settings 里面，找到 Objective-C Automatic Reference Counting ，并将其设置为 No ，然后再 Run 一次代码。你会看到打印日志是：exampleBlock is: "),t("strong",[s._v("NSStackBlock")])]),s._v(" "),t("p",[s._v("如果 block 访问了外部局部变量，此时的 block 就是一个栈 block ，并且存储在栈区。由于栈区的释放是由系统控制，因此栈中的代码在作用域结束之后内存就会销毁，如果此时再调用 block 就会发生问题，( 注： 此代码运行在 MRC 下)如：")]),s._v(" "),t("div",{staticClass:"language-objectivec line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objectivec"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),s._v("simpleBlock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("callFunc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" age "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    simpleBlock "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NSLog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"simpleBlock-----%d"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" argc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" argv"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    NSString "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" appDelegateClassName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("@")]),s._v("autoreleasepool "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("callFunc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("simpleBlock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Setup code that might create autoreleased objects goes here.")]),s._v("\n        appDelegateClassName "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NSStringFromClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("AppDelegate class"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("p",[s._v("打印日志：simpleBlock--------41044160")]),s._v(" "),t("h3",{attrs:{id:"nsmallocblock"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nsmallocblock"}},[s._v("#")]),s._v(" NSMallocBlock")]),s._v(" "),t("p",[s._v("当一个 "),t("strong",[s._v("NSStackBlock")]),s._v(" 类型 block 做 copy 操作后，就会将这个 block 从栈上复制到堆上，而堆上的这个 block 类型就是 "),t("strong",[s._v("NSMallocBlock")]),s._v(" 类型。在 ARC 环境下，编译器会根据情况，自动将 block 从栈上 copy 到堆上。具体会进行 copy 的情况有如下 4 种：")]),s._v(" "),t("p",[s._v("block 作为函数的返回值时；\nblock 赋值给 __strong 指针，或者赋值给 block 类型的成员变量时；\nblock 作为 Cocoa API 中方法名含有 usingBlock 的方法参数时；\nblock 作为 GCD API 的方法参数时；")]),s._v(" "),t("h3",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),t("p",[s._v("MRC下block类型")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("类型")]),s._v(" "),t("th",[s._v("环境")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("_NSConcreteGlobalBlock")]),s._v(" "),t("td",[s._v("只访问了静态变量（包括全局静态变量和局部静态变量）和全局变量")])]),s._v(" "),t("tr",[t("td",[s._v("_NSConcreteStackBlock")]),s._v(" "),t("td",[s._v("没访问静态变量和全局变量")])]),s._v(" "),t("tr",[t("td",[s._v("_NSConcreteMallocBlock")]),s._v(" "),t("td",[s._v("NSStackBlock调用了copy")])])])]),s._v(" "),t("p",[s._v("ARC下block类型")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("类型")]),s._v(" "),t("th",[s._v("环境")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("_NSConcreteGlobalBlock")]),s._v(" "),t("td",[s._v("只访问了静态变量（包括全局静态变量和局部静态变量）和全局变量")])]),s._v(" "),t("tr",[t("td",[s._v("_NSConcreteMallocBlock")]),s._v(" "),t("td",[s._v("没访问静态变量和全局变量")])])])]),s._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[s._v("点击查看")]),s._v(" "),t("div",{staticClass:"language-objectivec line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objectivec"}},[t("code",[s._v(" __weak "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("weakSelf "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),s._v("block1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//b为全局变量")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    __block "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),s._v("block2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NSLog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"age:%d"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" weakSelf"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NSLog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"block1.class = %@"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("block1 class"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NSLog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"block2.class = %@"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("block2 class"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NSLog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"block2 copy.class = %@"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("block2 copy"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" class"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n运行结果如下：\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("45")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("54.457496")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0800")]),s._v(" BlockTestDemo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("13178")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("426318")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" block1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("class "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" __NSGlobalBlock__\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("45")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("54.457616")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0800")]),s._v(" BlockTestDemo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("13178")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("426318")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" block2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("class "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" __NSStackBlock__\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("45")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("54.457720")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0800")]),s._v(" BlockTestDemo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("13178")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("426318")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" block2 copy"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("class "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" __NSMallocBlock__\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br")])])]),s._v(" "),t("h2",{attrs:{id:"block中关键字的使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#block中关键字的使用"}},[s._v("#")]),s._v(" block中关键字的使用")]),s._v(" "),t("h3",{attrs:{id:"block-的作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#block-的作用"}},[s._v("#")]),s._v(" __block 的作用")]),s._v(" "),t("p",[s._v("简单来说，__block 作用是允许 block 内部访问和修改外部变量，在 ARC 环境下还可以用来防止循环引用；")]),s._v(" "),t("div",{staticClass:"language-objectivec line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objectivec"}},[t("code",[s._v("__block "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" age "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),s._v("exampleBlock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// block")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NSLog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"1.age is: %d"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    age "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NSLog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"2.age is: %d"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("exampleBlock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NSLog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"3.age is: %d"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("__block 主要用来解决 block 内部无法修改 auto 变量值的问题，为什么加上 __block 修饰之后，auto 变量值就能修改了呢？")]),s._v(" "),t("p",[s._v("这是因为，加上 __block 修饰之后，编译器会将 __block 变量包装成一个结构体 __Block_byref_age_0 ，结构体内部 *__forwarding 是指向自身的指针，并且结构体内部还存储着外部 auto 变量。")]),s._v(" "),t("div",{staticClass:"language-objectivec line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objectivec"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" __Block_byref_val_0 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("__isa"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// isa指针")]),s._v("\n    __Block_byref_val_0 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("__forwarding"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" __flags"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" __size"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Block结构体大小")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 捕获到的变量")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://cdn.staticaly.com/gh/214070779/picx-images-hosting@master/20230813/Screenshot-2023-08-22-at-20.32.40.4mbeyx6a1lk0.webp",alt:"Screenshot-2023-08-22-at-20"}})]),s._v(" "),t("p",[s._v("从上图可以看到，如果 block 是在栈上，那么这个 __forwarding 指针就是指向它自己，当这个 block 从栈上复制到堆上后，栈上的 __forwarding 指针指向的是复制到堆上的 __block 结构体。堆上的 __block 结构体中的 __forwarding 指向的还是它自己，即 age->__forwarding 获取到堆上的 __block 结构体，age->__forwarding->age 会把堆上的 age 赋值为 16 。因此不管是栈上还是堆上的 __block 结构体，最终使用到的都是堆上的 __block 结构体里面的数据。")]),s._v(" "),t("p",[s._v("对于是否可以修改外部变量,我们可以主要集中于这个自加的操作,如果"),t("code",[s._v("__forwarding")]),s._v("永远指向自身那么直接通过i取到i对应的值就可以了为什么中间加一个"),t("code",[s._v("__forwarding")]),s._v("呢？")]),s._v(" "),t("p",[s._v("我们知道, ARC环境下，一旦Block赋值就会触发copy，__block修饰的变量也就会copy到堆上，Block的类型也就变成了__NSMallocBlock。")]),s._v(" "),t("p",[s._v("堆上的Block会持有对象。我们把Block通过copy到了堆上，堆上也会重新复制一份Block，并且该Block也会继续持有该__block修饰的对象。当Block释放的时候，__block修饰的对象因为没有被任何对象引用，也会被释放销毁")]),s._v(" "),t("p",[t("code",[s._v("__forwarding")]),s._v("指针这里的作用就是针对堆的Block，把原来"),t("code",[s._v("__forwarding")]),s._v("指针指向自己，换成指向"),t("code",[s._v("_NSConcreteMallocBlock")]),s._v("上复制之后的__block自己。然后堆上的变量的"),t("code",[s._v("__forwarding")]),s._v("再指向自己。这样不管__block怎么复制到堆上，还是在栈上，都可以通过"),t("code",[s._v("(i->__forwarding->i)")]),s._v("来访问到变量值。")]),s._v(" "),t("p",[s._v("block创建的时候是在栈上的,对block进行赋值操作之后会将block拷贝到堆上。同时也会将block中使用的对象拷贝到堆上。然后将栈上的__block修饰对象的__forwarding指针指向堆上的拷贝之后的对象。这样我们在block内部修改的时候虽然是修改堆上的对象的值,但是因为栈上的对象的__forwarding指针将堆和栈的对象链接起来。因此达到了修改的目的。")]),s._v(" "),t("h3",{attrs:{id:"weak-的作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#weak-的作用"}},[s._v("#")]),s._v(" __weak 的作用")]),s._v(" "),t("p",[s._v("简单来说是为了防止循环引用。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.staticaly.com/gh/214070779/picx-images-hosting@master/20230813/Screenshot-2023-08-22-at-20.36.38.7dcazf1w73k0.webp",alt:"Screenshot-2023-08-22-at-20"}})]),s._v(" "),t("p",[s._v("self 本身会对 block 进行强引用，block 也会对 self 形成强引用，这样就会造成循环引用的问题。我们可以通过使用 __weak 打破循环，使 block 对象对 self 弱引用。")]),s._v(" "),t("p",[s._v("此时我们注意，由于 block 对 self 的引用为 weak 引用，因此有可能在执行 block 时，self 对象本身已经释放，那么我们如何保证 self 对象不在 block 内部释放呢？这就引出了下面__strong 的作用。")]),s._v(" "),t("h3",{attrs:{id:"strong-的作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#strong-的作用"}},[s._v("#")]),s._v(" __strong 的作用")]),s._v(" "),t("p",[s._v("简单来说，是防止 block 内部引用的外部 weak 变量被提前释放，进而在 block 内部无法获取 weak 变量以继续使用的情况；")]),s._v(" "),t("div",{staticClass:"language-objectivec line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objectivec"}},[t("code",[s._v("__weak "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("__typeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" weakSelf "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),s._v("exampleBlock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    __strong "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("__typeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("weakSelf"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" strongSelf "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" weakSelf"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("strongSelf exampleFunc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("这样就保证了在 block 作用域结束之前，block 内部都持有一个 strongSelf 对象可供使用。")]),s._v(" "),t("p",[s._v("但是，即便如此，依然有一个场景，就是执行 __strong __typeof(weakSelf) strongSelf = weakSelf; 之前，weakSelf 对象已经释放，这时如果给 self 对象发送消息，这没有问题，Objective-C 的消息发送机制允许我们给一个 nil 对象发送消息，这不会出现问题。但如果有额外的一些操作，比如说将 self 添加到数组，这时因为 self 为 nil，程序就会 Crash。")]),s._v(" "),t("p",[s._v("我们可以增加一层安全保护来解决这个问题，如：")]),s._v(" "),t("div",{staticClass:"language-objectivec line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objectivec"}},[t("code",[s._v("__weak "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("__typeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" weakSelf "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),s._v("exampleBlock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    __strong "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("__typeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("weakSelf"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" strongSelf "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" weakSelf"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("strongSelf"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Add operation here")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h2",{attrs:{id:"拓展知识"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#拓展知识"}},[s._v("#")]),s._v(" 拓展知识")]),s._v(" "),t("h3",{attrs:{id:"思考题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#思考题"}},[s._v("#")]),s._v(" 思考题")]),s._v(" "),t("p",[s._v("Block 内修改外部 NSMutableString 、NSMutableArray 、NSMutableDictionary 对象，是否需要添加 __block 修饰？")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('NSMutableArray *mutableArray = [[NSMutableArray alloc] init];\n[mutableArray addObject:@"1"];\nvoid (^exampleBlock)(void) = ^{\n    // block\n    [mutableArray addObject:@"2"];\n};\nexampleBlock();\nNSLog(@"mutableArray: %@", mutableArray);\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("打印日志：mutableArray: ( 1, 2 )")]),s._v(" "),t("p",[s._v("答案是：不需要，因为在 block 内部，我们只是使用了对象 mutableArray 的内存地址，往其中添加内容。并没有修改其内存地址，因此不需要使用 __block 也可以正确执行。当我们只是使用局部变量的内存地址，而不是对其内存地址进行修改时，我们无需对其添加 __block ，如果添加了 __block 系统会自动创建相应的结构体，这种情况冗余且低效。")]),s._v(" "),t("h3",{attrs:{id:"block-数据结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#block-数据结构"}},[s._v("#")]),s._v(" Block 数据结构")]),s._v(" "),t("p",[s._v("Block 内部数据结构图如下：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.staticaly.com/gh/214070779/picx-images-hosting@master/20230813/Screenshot-2023-08-22-at-20.39.46.72e92suy31k0.webp",alt:"Screenshot-2023-08-22-at-20"}})]),s._v(" "),t("div",{staticClass:"language-objectivec line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objectivec"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" Block_descriptor "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" reserved"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" size"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("copy"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("dst"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("src"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("dispose"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" Block_layout "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("isa"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" flags"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" reserved"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("invoke"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" Block_descriptor "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("descriptor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Imported variables. */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("p",[s._v("Block_layout 结构体成员含义如下：")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),t("p",[s._v("isa: 指向所属类的指针，也就是 block 的类型")]),s._v(" "),t("p",[s._v("flags: 按 bit 位表示一些 block 的附加信息，比如判断 block 类型、判断 block 引用计数、判断 block 是否需要执行辅助函数等；")]),s._v(" "),t("p",[s._v("reserved: 保留变量；")]),s._v(" "),t("p",[s._v("invoke: block 函数指针，指向具体的 block 实现的函数调用地址，block 内部的执行代码都在这个函数中；")]),s._v(" "),t("p",[s._v("descriptor: 结构体 Block_descriptor，block 的附加描述信息，包含 copy/dispose 函数，block 的大小，保留变量；")]),s._v(" "),t("p",[s._v("variables: 因为 block 有闭包性，所以可以访问 block 外部的局部变量。这些 variables 就是复制到结构体中的外部局部变量或变量的地址；")])]),s._v(" "),t("p",[s._v("Block_descriptor 结构体成员含义如下：")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),t("p",[s._v("reserved: 保留变量；")]),s._v(" "),t("p",[s._v("size: block 的大小；")]),s._v(" "),t("p",[s._v("copy: 函数用于捕获变量并持有引用；")]),s._v(" "),t("p",[s._v("dispose: 析构函数，用来释放捕获的资源；")])]),s._v(" "),t("h2",{attrs:{id:"总结-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结-2"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),t("p",[s._v("使用 Block 过程中需要我们关注的重点有 4 个：")]),s._v(" "),t("p",[s._v("block 的三种类型；\nblock 避免引起循环引用；\nblock 对 auto 变量的 copy 操作；\n__block、__weak、__strong 的作用；")]),s._v(" "),t("h2",{attrs:{id:"block面试题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#block面试题"}},[s._v("#")]),s._v(" block面试题")]),s._v(" "),t("h3",{attrs:{id:"block和-weak修饰符的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#block和-weak修饰符的区别"}},[s._v("#")]),s._v(" _block和__weak修饰符的区别？")]),s._v(" "),t("ul",[t("li",[s._v("__block不管是ARC还是MRC模式下都可以使用，可以修饰对象，还可以修饰基本数据类型。")]),s._v(" "),t("li",[s._v("__weak只能在ARC模式下使用，也只能修饰对象，不能修饰基本数据类型。")]),s._v(" "),t("li",[s._v("__block对象可以在block中被重新赋值，__weak不可以。")])]),s._v(" "),t("h3",{attrs:{id:"block是否能修改外部变量的值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#block是否能修改外部变量的值"}},[s._v("#")]),s._v(" block是否能修改外部变量的值")]),s._v(" "),t("p",[s._v("Block不允许修改外部变量的值，这里所说的外部变量的值，指的是栈中指针的内存地址。__block 所起到的作用就是只要观察到该变量被 block 所持有，就将“外部变量”在栈中的内存地址放到了堆中。进而在block内部也可以修改外部变量的值。")]),s._v(" "),t("h3",{attrs:{id:"block在arc跟mrc中的行为和用法有什么区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#block在arc跟mrc中的行为和用法有什么区别"}},[s._v("#")]),s._v(" Block在ARC跟MRC中的行为和用法有什么区别？")]),s._v(" "),t("p",[t("strong",[s._v("相同点")])]),s._v(" "),t("ul",[t("li",[s._v("block的本质一样, 都是函数指针")]),s._v(" "),t("li",[s._v("使用__block都可以解决在block中修改外部变量的问题")])]),s._v(" "),t("p",[t("strong",[s._v("不同点")])]),s._v(" "),t("p",[s._v("解决循环引用的方式不同\nMRC中使用__block\nARC中使用 __weak")]),s._v(" "),t("p",[s._v("block用什么属性修饰，为什么？")]),s._v(" "),t("p",[s._v("在MRC中, 定义Block属性时, 应该用copy修饰")]),s._v(" "),t("p",[s._v("在ARC中, 定义Block属性时, 系统会自动将其copy, 即复制到堆上. 但习惯上还是会用copy修饰")]),s._v(" "),t("p",[s._v("用copy修饰的原因")]),s._v(" "),t("p",[s._v("block创建时默认是创建在栈上的, 超过作用域后就会被销毁, 只有使用copy才会生成一个堆block, 在作用域外被访问")]),s._v(" "),t("h3",{attrs:{id:"block是类吗-有哪些类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#block是类吗-有哪些类型"}},[s._v("#")]),s._v(" block是类吗，有哪些类型?")]),s._v(" "),t("p",[s._v("block也算是个类,因为它有isa指针,block.isa的类型包括")]),s._v(" "),t("p",[s._v("_NSConcreteGlobalBlock 跟全局变量一样,设置在程序的数据区域(.data)中\n_NSConcreteStackBlock栈上(前面讲的都是栈上的 block)\n_NSConcreteMallocBlock 堆上")]),s._v(" "),t("blockquote",[t("p",[s._v("这个isa可以按位运算")])]),s._v(" "),t("h3",{attrs:{id:"一个int变量被-block-修饰与否的区别-block的变量截获"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一个int变量被-block-修饰与否的区别-block的变量截获"}},[s._v("#")]),s._v(" 一个int变量被 __block 修饰与否的区别？block的变量截获")]),s._v(" "),t("p",[s._v("被__block 修饰与否的区别\n用一段示例代码来解答这个问题吧:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('__block int a = 10;\nint b = 20;\n\nPrintTwoIntBlock block = ^(){\n    a -= 10;\n    printf("%d, %d\\n",a,b);\n};\n\nblock();//0 20\n\na += 20;\nb += 30;\n\nprintf("%d, %d\\n",a,b);//20 50\n\nblock();/10 20\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("p",[s._v("通过__block修饰int a,block体中对这个变量的引用是指针拷贝,它会作为block结构体构造参数传入到结构体中且复制这个变量的指针引用，从而达到可以修改变量的作用.")]),s._v(" "),t("p",[s._v("int b没有被__block修饰,block内部对b是值copy.所以在block内部修改b不影响外部b的变化.")]),s._v(" "),t("h3",{attrs:{id:"什么时候栈上的block会被复制到堆呢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么时候栈上的block会被复制到堆呢"}},[s._v("#")]),s._v(" 什么时候栈上的Block会被复制到堆呢？")]),s._v(" "),t("ul",[t("li",[s._v("调用block的copy函数时。")]),s._v(" "),t("li",[s._v("Block作为函数返回值返回时。")]),s._v(" "),t("li",[s._v("将Block赋值给附有__strong修饰符id类型的类或者Block类型成员变量时。")]),s._v(" "),t("li",[s._v("方法中含有usingBlock的Cocoa框架方法或者GCD的API中传递Block时。")])]),s._v(" "),t("p",[s._v("什么时候Block被废弃呢？")]),s._v(" "),t("p",[s._v("堆上的Block被释放后,谁都不再持有Block时调用dispose函数。")]),s._v(" "),t("h3",{attrs:{id:"block在修改nsmutablearray-需不需要添加-block"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#block在修改nsmutablearray-需不需要添加-block"}},[s._v("#")]),s._v(" block在修改NSMutableArray，需不需要添加__block")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("如修改NSMutableArray的存储内容的话,是不需要添加__block修饰的。")])]),s._v(" "),t("li",[t("p",[s._v("如修改NSMutableArray对象的本身,那必须添加__block修饰。")])])]),s._v(" "),t("h3",{attrs:{id:"block怎么进行内存管理的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#block怎么进行内存管理的"}},[s._v("#")]),s._v(" block怎么进行内存管理的?")]),s._v(" "),t("p",[s._v("在上面Block的构造函数__TestClass__testMethods_block_impl_0中的isa指针指向的是&_NSConcreteStackBlock，它表示当前的Block位于栈区中.")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("block内存操作")]),s._v(" "),t("th",[s._v("存储域/存储位置")]),s._v(" "),t("th",[s._v("copy操作的影响")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("_NSConcreteGlobalBlock")]),s._v(" "),t("td",[s._v("程序的数据区域")]),s._v(" "),t("td",[s._v("什么也不做")])]),s._v(" "),t("tr",[t("td",[s._v("_NSConcreteStackBlock")]),s._v(" "),t("td",[s._v("栈")]),s._v(" "),t("td",[s._v("从栈拷贝到堆")])]),s._v(" "),t("tr",[t("td",[s._v("_NSConcreteMallocBlock")]),s._v(" "),t("td",[s._v("堆")]),s._v(" "),t("td",[s._v("引用计数增加")])])])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("全局Block:_NSConcreteGlobalBlock的结构体实例设置在程序的数据存储区，所以可以在程序的任意位置通过指针来访问，它的产生条件:")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("记述全局变量的地方有block语法时.")])]),s._v(" "),t("li",[t("p",[s._v("block不截获的自动变量.")]),s._v(" "),t("blockquote",[t("p",[s._v("以上两个条件只要满足一个就可以产生全局Block. 参考")])])])])]),s._v(" "),t("li",[t("p",[s._v("栈Block:")])])]),s._v(" "),t("p",[s._v("_NSConcreteStackBlock在生成Block以后，如果这个Block不是全局Block,那它就是栈Block,生命周期在其所属的变量作用域内.(也就是说如果销毁取决于所属的变量作用域).如果Block变量和__block变量复制到了堆上以后，则不再会受到变量作用域结束的影响了，因为它变成了")]),s._v(" "),t("ul",[t("li",[s._v("堆Block.")])]),s._v(" "),t("p",[s._v("_NSConcreteMallocBlock将栈block复制到堆以后，block结构体的isa成员变量变成了_NSConcreteMallocBlock。")]),s._v(" "),t("h3",{attrs:{id:"block可以用strong修饰吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#block可以用strong修饰吗"}},[s._v("#")]),s._v(" block可以用strong修饰吗?")]),s._v(" "),t("p",[s._v("在ARC中可以，因为在ARC环境中的block只能在堆内存或全局内存中，因此不涉及到从栈拷贝到堆中的操作.")]),s._v(" "),t("p",[s._v("在MRC中不行,因为要有拷贝过程.如果执行copy用strong的话会crash, strong是ARC中引入的关键字.如果使用retain相当于忽视了block的copy过程.")]),s._v(" "),t("h3",{attrs:{id:"解决循环引用时为什么要用-strong、-weak修饰"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决循环引用时为什么要用-strong、-weak修饰"}},[s._v("#")]),s._v(" 解决循环引用时为什么要用__strong、__weak修饰?")]),s._v(" "),t("p",[s._v("首先因为block捕获变量的时候 结构体构造时传入了self,造成了默认的引用关系,所以一般在block外部对操作对象会加上__weak,在Block内部使用__strong修饰符的对象类型的自动变量，那么当Block从栈复制到堆的时候，该对象就会被Block所持有,但是持有的是我们上面加了__weak所以行程了比消此长的链条,刚好能解决block延迟销毁的时候对外部对象生命周期造成的影响.如果不这样做很容易造成循环引用.")]),s._v(" "),t("h3",{attrs:{id:"block发生copy时机"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#block发生copy时机"}},[s._v("#")]),s._v(" block发生copy时机?")]),s._v(" "),t("p",[s._v("在ARC中,编译器将创建在栈中的block会自动拷贝到堆内存中,而block作为方法或函数的参数传递时,编译器不会做copy操作.")]),s._v(" "),t("ul",[t("li",[s._v("调用block的copy函数时。")]),s._v(" "),t("li",[s._v("Block作为函数返回值返回时。")]),s._v(" "),t("li",[s._v("将Block赋值给附有__strong修饰符id类型的类或者Block类型成员变量时。")]),s._v(" "),t("li",[s._v("方法中含有usingBlock的Cocoa框架方法或者GCD的API中传递Block时。")])]),s._v(" "),t("h3",{attrs:{id:"block访问对象类型的auto变量时-在arc和mrc下有什么区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#block访问对象类型的auto变量时-在arc和mrc下有什么区别"}},[s._v("#")]),s._v(" Block访问对象类型的auto变量时，在ARC和MRC下有什么区别?")]),s._v(" "),t("p",[s._v("ARC下会对这个对象强引用，MRC下不会")]),s._v(" "),t("h2",{attrs:{id:"block-的变量捕获机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#block-的变量捕获机制"}},[s._v("#")]),s._v(" block 的变量捕获机制")]),s._v(" "),t("p",[s._v("block 的变量捕获机制，是为了保证 block 内部能够正常访问外部的变量。")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("变量类型")]),s._v(" "),t("th",[s._v("是否捕获到 block 内部")]),s._v(" "),t("th",[s._v("访问方式")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("全局变量")]),s._v(" "),t("td",[s._v("否")]),s._v(" "),t("td",[s._v("直接访问")])]),s._v(" "),t("tr",[t("td",[s._v("局部变量（auto 类型）")]),s._v(" "),t("td",[s._v("是")]),s._v(" "),t("td",[s._v("值传递")])]),s._v(" "),t("tr",[t("td",[s._v("局部变量（static 类型）")]),s._v(" "),t("td",[s._v("是")]),s._v(" "),t("td",[s._v("指针传递")])])])]),s._v(" "),t("p",[s._v("对于全局变量，不会捕获到 block 内部，访问方式为直接访问。作用域的原因，全局变量哪里都可以直接访问，所以不用捕获。而对于局部变量，外部不能直接访问，所以需要捕获。下面我们来看一下 block 对于局部变量的具体捕获机制。")]),s._v(" "),t("h3",{attrs:{id:"auto-类型的局部变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#auto-类型的局部变量"}},[s._v("#")]),s._v(" auto 类型的局部变量")]),s._v(" "),t("p",[s._v("auto 类型的局部变量（我们定义出来的变量，默认都是 auto 类型，只是省略了），block 内部会自动生成一个同类型成员变量，用来存储这个变量的值，访问方式为值传递。auto 类型的局部变量可能会销毁，其内存会消失，block 将来执行代码的时候不可能再去访问那块内存，所以捕获其值。由于是值传递，我们修改 block 外部被捕获变量的值，不会影响到 block 内部捕获的变量值。")]),s._v(" "),t("div",{staticClass:"language-objectivec line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objectivec"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//局部变量截获 是值截获")]),s._v("\nNSInteger num "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NSInteger")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),s._v("block"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("NSInteger"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NSInteger")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("NSInteger n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("num"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nnum "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NSLog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"%zd"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("block")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这里的输出是6而不是2，原因就是对局部变量num的截获是值截获。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//同样，在block里如果修改变量num，也是无效的，甚至编译器会报错")]),s._v("\nNSMutableArray "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" arr "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("NSMutableArray arrayWithObjects"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nil"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),s._v("block"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NSLog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"%@"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("arr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//局部变量")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("arr addObject"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"4"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("arr addObject"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"3"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\narr "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nil"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("block")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n打印为"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("，"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("，"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n局部对象变量也是一样，截获的是值，而不是指针，在外部将其置为nil，对block没有影响，而该对象调用方法会影响\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("h3",{attrs:{id:"static-类型的局部变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#static-类型的局部变量"}},[s._v("#")]),s._v(" static 类型的局部变量")]),s._v(" "),t("p",[s._v("static 类型的局部变量，block 内部会自动生成一个同类型成员变量，用来存储这个变量的地址，访问方式为指针传递。static 变量会一直保存在内存中， 所以捕获其地址即可。相反，由于是指针传递，我们修改 block 外部被捕获变量的值，会影响到 block 内部捕获的变量值。")]),s._v(" "),t("div",{staticClass:"language-objectivec line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objectivec"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//局部静态变量截获 是指针截获。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v("  NSInteger num "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NSInteger")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),s._v("block"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("NSInteger"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NSInteger")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("NSInteger n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("num"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nnum "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NSLog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"%zd"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("block")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n输出为"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("，意味着num "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("这里的修改num值是有效的，即是指针截获。\n同样，在block里去修改变量m，也是有效的。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("div",{staticClass:"language-objectivec line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objectivec"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//全局变量，静态全局变量截获：不截获,直接取值。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("我们同样用clang编译看下结果。\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" NSInteger num3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("300")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nNSInteger num4 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("blockTest\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    NSInteger num "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" NSInteger num2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    __block NSInteger num5 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("30000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),s._v("block"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NSLog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"%zd"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("num"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//局部变量")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NSLog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"%zd"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("num2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//静态变量")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NSLog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"%zd"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("num3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//全局变量")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NSLog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"%zd"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("num4"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//全局静态变量")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NSLog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"%zd"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("num5"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//__block修饰变量")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("block")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("h3",{attrs:{id:"对象类型的局部变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对象类型的局部变量"}},[s._v("#")]),s._v(" 对象类型的局部变量")]),s._v(" "),t("p",[s._v("对于对象类型的局部变量，block 会连同它的所有权修饰符一起捕获。")]),s._v(" "),t("ul",[t("li",[s._v("如果 block 是在栈上，将不会对对象产生强引用")]),s._v(" "),t("li",[s._v("如果 block 被拷贝到堆上，将会调用 block 内部的 copy(__funcName_block_copy_num)函数，copy 函数内部又会调用 assign(_Block_object_assign)函数，assign 函数将会根据变量的所有权修饰符做出相应的操作，形成强引用（retain）或者弱引用。")]),s._v(" "),t("li",[s._v("如果 block 从堆上移除，也就是被释放的时候，会调用 block 内部的 dispose(_Block_object_dispose)函数，dispose 函数会自动释放引用的变量（release）。")])]),s._v(" "),t("p",[t("strong",[s._v("总结1:")])]),s._v(" "),t("blockquote",[t("p",[s._v("MRC 中block 没有引用外部变量, block为 NSGlobalBlock 类型,存储在全局数据区."),t("br"),s._v("\nMRC 中block 引用外部变量,block为NSStackBlock 类型,存储在栈内存中."),t("br"),s._v("\n所以, 在block所属的栈作用域外使用block时, 需要将调用copy方法将该block存储在堆区.")])]),s._v(" "),t("p",[t("strong",[s._v("总结2:")])]),s._v(" "),t("blockquote",[t("p",[s._v("ARC 中 没有引用外部变量, block为 NSGlobalBlock 类型,存储在全局数据区."),t("br"),s._v("\nARC 中 引用外部变量, block为 autoreleased NSMallocBlock 类型,存储在堆内存中.")])])])}),[],!1,null,null,null);t.default=e.exports}}]);