(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{393:function(a,s,e){"use strict";e.r(s);var n=e(4),r=Object(n.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h3",{attrs:{id:"_1-什么是循环引用问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是循环引用问题"}},[a._v("#")]),a._v(" 1.什么是循环引用问题？")]),a._v(" "),s("p",[a._v("上篇文章说到循环引用的问题，其实引用计数这种管理"),s("a",{attrs:{href:"https://so.csdn.net/so/search?q=%E5%86%85%E5%AD%98&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"}},[a._v("内存"),s("OutboundLink")],1),a._v("的方式虽然简单，但是有一个瑕疵，它不能很好的解决循环引用的问题。如图展示：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdn.net/20170705134440693?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3V6elpZdWVz/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast",alt:"这里写图片描述"}})]),a._v(" "),s("p",[a._v("对象A和对象B，互相引用了对方作为自己的成员变量，只有当自己销毁的时候，才会将成员变量的引用计数减1。因为对象A的摧毁依赖于对象B的销毁，而对象B的销毁依赖与对象A的销毁，这样就造成了循环引用问题。即使在外界已经没有任何指针能访问它们了，它们这种互相依赖关系也无法被释放。")]),a._v(" "),s("p",[a._v("不止两个对象可以产生循环引用问题，多个对象间依次持有，形成一个环路造成循环引用，这是最恶心的，因为在实际开发中，环大起来简直要命了，很难找出来。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdn.net/20170705135210339?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3V6elpZdWVz/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast",alt:"这里写图片描述"}})]),a._v(" "),s("h3",{attrs:{id:"_2-解决循环引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-解决循环引用"}},[a._v("#")]),a._v(" 2.解决循环引用")]),a._v(" "),s("p",[a._v("解决办法有两个，第一个办法就是我明确知道这里会存在循环引用，在合理的位置主动的断开环中的一个引用，使得对象得以回收。但是这种方法并不是很好用，依赖于程序员对具体业务逻辑相当的熟悉。现在，更常见的是第二种方法：使用弱引用（weak reference）的办法。")]),a._v(" "),s("p",[a._v("弱引用虽然持有对象，但是并不增加引用计数，这样就避免了循环引用的产生。在iOS开发中，弱引用通常在delegate模式中使用。这个之前的文章有说过的。传送门："),s("a",{attrs:{href:"http://blog.csdn.net/cuzzZYues/article/details/73691085",target:"_blank",rel:"noopener noreferrer"}},[a._v("iOS - Delegate代理为什么要用weak修饰（面试官钟爱）_ios delegate为什么weak-CSDN博客"),s("OutboundLink")],1)]),a._v(" "),s("h3",{attrs:{id:"二、循环引用类型-哪些场景会有循环引用问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、循环引用类型-哪些场景会有循环引用问题"}},[a._v("#")]),a._v(" 二、循环引用类型（哪些场景会有循环引用问题）")]),a._v(" "),s("h5",{attrs:{id:"自循环引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自循环引用"}},[a._v("#")]),a._v(" 自循环引用")]),a._v(" "),s("p",[a._v("假如有一个对象，内部强持有它的成员变量 obj，若此时我们 给 o bj 赋值为原对象时，就是自循环引用。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://rte.weiyun.baidu.com/wiki/attach/image/api/imageDownloadAddress?attachId=13e47707e1794fdab756bf64e95d55d5&docGuid=Otj87nZkAI3zo5&sign=eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIiwiYXBwSWQiOjEsInVpZCI6IkdKM2VhTER2X1oiLCJkb2NJZCI6Ik90ajg3blprQUkzem81In0..nf8Xac_QAkXUg2CG.6T3e3akzcMF1nwSJAareb2ZcHeHDjVRTt9UBM8lDEEdWQLcDzPQmM88S4YG-O0r0yhHr6vQLyStxzS6HBnUREkamFLVy0CeT-8lgMA-s9IjN4b4ir_FzVUZL9DKpDWAP8wrYlTN6-4xeLw-Vsh-Zxw6nWhiy0C94pdSNHriYyS5dquu3PZKoVyFvc5Pl2tUb_RWTxMaf9l-B9rUzJm4ZjfEoxQ.x45-pgY9BjSTih-0HbQDlg",alt:""}})]),a._v(" "),s("h5",{attrs:{id:"相互循环引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#相互循环引用"}},[a._v("#")]),a._v(" 相互循环引用")]),a._v(" "),s("p",[a._v("对象 A 内部强 持有 obj ， 对象 B 内部强持有 obj ， 若 此时对 象 A 的 obj 指 向对 象 B ，同时对 象 B 中的 obj 指向对象 A，就是相互引用。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://rte.weiyun.baidu.com/wiki/attach/image/api/imageDownloadAddress?attachId=a0c4524ec5ec4cd2a0e9036d034a01a8&docGuid=Otj87nZkAI3zo5&sign=eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIiwiYXBwSWQiOjEsInVpZCI6IkdKM2VhTER2X1oiLCJkb2NJZCI6Ik90ajg3blprQUkzem81In0..nf8Xac_QAkXUg2CG.6T3e3akzcMF1nwSJAareb2ZcHeHDjVRTt9UBM8lDEEdWQLcDzPQmM88S4YG-O0r0yhHr6vQLyStxzS6HBnUREkamFLVy0CeT-8lgMA-s9IjN4b4ir_FzVUZL9DKpDWAP8wrYlTN6-4xeLw-Vsh-Zxw6nWhiy0C94pdSNHriYyS5dquu3PZKoVyFvc5Pl2tUb_RWTxMaf9l-B9rUzJm4ZjfEoxQ.x45-pgY9BjSTih-0HbQDlg",alt:""}})]),a._v(" "),s("h5",{attrs:{id:"多循环引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多循环引用"}},[a._v("#")]),a._v(" 多循环引用")]),a._v(" "),s("p",[a._v("假如类中有对象 1...对象 N，每个对象中都强持有一 个 obj，若每个对 象的 obj 都指向下个对象，就产生了多循环引用。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://rte.weiyun.baidu.com/wiki/attach/image/api/imageDownloadAddress?attachId=c4bc27f7ffa04f99afccc33c4e4ee76d&docGuid=Otj87nZkAI3zo5&sign=eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIiwiYXBwSWQiOjEsInVpZCI6IkdKM2VhTER2X1oiLCJkb2NJZCI6Ik90ajg3blprQUkzem81In0..nf8Xac_QAkXUg2CG.6T3e3akzcMF1nwSJAareb2ZcHeHDjVRTt9UBM8lDEEdWQLcDzPQmM88S4YG-O0r0yhHr6vQLyStxzS6HBnUREkamFLVy0CeT-8lgMA-s9IjN4b4ir_FzVUZL9DKpDWAP8wrYlTN6-4xeLw-Vsh-Zxw6nWhiy0C94pdSNHriYyS5dquu3PZKoVyFvc5Pl2tUb_RWTxMaf9l-B9rUzJm4ZjfEoxQ.x45-pgY9BjSTih-0HbQDlg",alt:""}})]),a._v(" "),s("p",[a._v("**总之，识别循环引用的核心就是：**"),s("em",[s("strong",[a._v("两个或多个对象之间是否存在保留环。")])])]),a._v(" "),s("h3",{attrs:{id:"三、常见循环用及原因"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、常见循环用及原因"}},[a._v("#")]),a._v(" 三、常见循环用及原因")]),a._v(" "),s("h5",{attrs:{id:"代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代理"}},[a._v("#")]),a._v(" 代理")]),a._v(" "),s("p",[a._v("VC页面强持有UITableView，UITableView强持有Cell，在设置Cell的delegate为VC时，如果使用strong，这样就会形成循环引用。")]),a._v(" "),s("p",[a._v("VC->UITableView->Cell->VC")]),a._v(" "),s("p",[a._v("这种循环引用，比较简单，把Cell的delegate属性使用weak修饰，进行弱引用VC即可。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("@interface ViewController ()\n\n@property (nonatomic, copy) NSArray *array;\n@property (nonatomic, copy) void (^myBlock)(void);\n\n@end\n\n@implementation ViewController\n\n- (void)viewDidLoad {\n    [super viewDidLoad];\n\n    self.myBlock = ^{\n        NSLog(@\"%@\", self.array); // Capturing 'self' strongly in this block is likely to lead to a retain cycle\n        NSLog(@\"%@\", _array); // Block implicitly retains 'self'; explicitly mention 'self' to indicate this is intended behavior\n    };\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br")])]),s("p",[a._v("1.因为"),s("code",[a._v("self")]),a._v("强引用了"),s("code",[a._v("myblock")]),a._v("，此时"),s("code",[a._v("myblock")]),a._v("在堆上，"),s("code",[a._v("myblock")]),a._v("捕获"),s("code",[a._v("self")]),a._v("并在其中强制持有，会导致保留环。")]),a._v(" "),s("blockquote",[s("p",[a._v("出现以下情况时，ARC 会自动对 block 执行一次 copy 操作，将其从栈区移动到堆区：")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("当 block 作为函数返回值时。")])]),a._v(" "),s("li",[s("p",[a._v("当 block 被强指针引用时。")])]),a._v(" "),s("li",[s("p",[a._v("当 Cocoa API 方法名包含usingBlock，且 block 作为参数时，或 block 作为 GCD API 方法参数")])])])]),a._v(" "),s("p",[a._v("2."),s("code",[a._v("myblock")]),a._v("中使用了"),s("code",[a._v("self")]),a._v("的实例变量 "),s("code",[a._v("_array")]),a._v(" ，因此"),s("code",[a._v("myblock")]),a._v("会隐式的retain住"),s("code",[a._v("self")]),a._v("。(因为访问成员变量本质上是在调用"),s("code",[a._v("self->instance")]),a._v("，即仍然访问了"),s("code",[a._v("self")]),a._v("。)")]),a._v(" "),s("p",[a._v("解决方案：")]),a._v(" "),s("p",[a._v("在block外部使用__weak生成一个对self的弱引用weakSelf，block捕获weakSelf时，会连同他的修饰符进行捕获，在block对象内部产生一个指向真实内存区的__weak引用。从而解决了block对真实内存区的强引用问题")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('__weak typeof(self) weakSelf = self;\nself.myBlock = ^{\n   NSLog(@"%@", weakSelf.array);\n   NSLog(@"%@", weakSelf->_array);\n};\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("p",[a._v("那self和weakSelf一样么？")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('NSLog(@"self === %p", &self);\n__weak typeof(self) weakSelf = self;\nself.myBlock = ^{\n    NSLog(@"weakSelf === %p", &weakSelf);\n    NSLog(@"%@", weakSelf.array);\n};\nself.myBlock();\n\n// 打印\nself === 0x16aff39b8\nweakSelf === 0x600003bac050\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br")])]),s("p",[a._v("进入block外和block里面的weakSelf是不一样的。")]),a._v(" "),s("p",[a._v("我们使用：xcrun -sdk iphoneos clang -arch arm64 -rewrite-objc -fobjc-arc -fobjc-runtime=ios-14.0.0 ViewController.m 命令，将ViewController.m转成C++代码")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// @implementation ViewController\n\nstruct __ViewController__viewDidLoad_block_impl_0 {\n  struct __block_impl impl;\n  struct __ViewController__viewDidLoad_block_desc_0* Desc;\n  ViewController *const __weak weakSelf; // 对捕获的weakSelf进行弱引用。\n  __ViewController__viewDidLoad_block_impl_0(void *fp, struct __ViewController__viewDidLoad_block_desc_0 *desc, ViewController *const __weak _weakSelf, int flags=0) : weakSelf(_weakSelf) {\n    impl.isa = &_NSConcreteStackBlock;\n    impl.Flags = flags;\n    impl.FuncPtr = fp;\n    Desc = desc;\n  }\n};\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br")])]),s("p",[a._v("通过源码可以看出，block内部对捕获的weakSelf进行了弱引用，从而打破了block强引用self的这一层关系。")]),a._v(" "),s("p",[a._v("为什么我们在项目中，block体里有时候又会使用strongSelf呢？")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("__strong typeof(weakSelf) strongSelf = weakSelf;\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("假设有这样的场景：block里面有延迟操作self的持有的对象时，如下：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('- (void)viewDidLoad {\n    [super viewDidLoad];\n\n    self.car = [[Car alloc] init];\n    self.car.name = @"xiaomi su7";\n\n    __weak typeof(self.car) weakCar = self.car;\n    self.car.block = ^{\n        dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(3 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{\n            NSLog(@"car.name2 === %@", weakCar.name);\n        });\n        NSLog(@"car.name1 === %@", weakCar.name);\n    };\n    self.car.block();\n    self.car = nil;\n}\n\n// 打印结果\ncar.name1 === xiaomi su7\ncar.name2 === (null)\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br")])]),s("p",[a._v("可以看出self强持有car对象，在执行blcok之后，就把car置为nil。block里又有延迟函数，来读取self持有的car信息。")]),a._v(" "),s("p",[a._v("通过打印结果来看：这通常不是我们想要的结果，故，我们需要在block体内进行一个“强引用”来延迟car的释放")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('- (void)viewDidLoad {\n    [super viewDidLoad];\n\n    self.car = [[Car alloc] init];\n    self.car.name = @"xiaomi su7";\n\n    __weak typeof(self.car) weakCar = self.car;\n    self.car.block = ^{\n         __strong typeof(weakCar) strongCar = weakCar;\n        dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(3 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{\n            NSLog(@"car.name2 === %@", strongCar.name);\n        });\n        NSLog(@"car.name1 === %@", weakCar.name);\n    };\n    self.car.block();\n    self.car = nil;\n}\n\n// 打印结果\ncar.name1 === xiaomi su7\ncar.name2 === xiaomi su7\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br")])]),s("p",[a._v("原理：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://rte.weiyun.baidu.com/wiki/attach/image/api/imageDownloadAddress?attachId=59b3e44726ef45a59c515516fd3c6df7&docGuid=Otj87nZkAI3zo5&sign=eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIiwiYXBwSWQiOjEsInVpZCI6IkdKM2VhTER2X1oiLCJkb2NJZCI6Ik90ajg3blprQUkzem81In0..nf8Xac_QAkXUg2CG.6T3e3akzcMF1nwSJAareb2ZcHeHDjVRTt9UBM8lDEEdWQLcDzPQmM88S4YG-O0r0yhHr6vQLyStxzS6HBnUREkamFLVy0CeT-8lgMA-s9IjN4b4ir_FzVUZL9DKpDWAP8wrYlTN6-4xeLw-Vsh-Zxw6nWhiy0C94pdSNHriYyS5dquu3PZKoVyFvc5Pl2tUb_RWTxMaf9l-B9rUzJm4ZjfEoxQ.x45-pgY9BjSTih-0HbQDlg",alt:""}})]),a._v(" "),s("p",[a._v("这就是我们要引入strongSelf的原因：用来稍微延长真实内存区的生存期，确保block体内操作对象不被释放。")]),a._v(" "),s("p",[a._v("strongSelf是个局部变量，它的生存期与方法体同在，也就是说你在方法体开始时，保证了strongSelf不为空，那在方法体结束时，它依旧能提供这样的保证。当方法体结束时，strongSelf局部变量的生存期到期，strongSelf被释放，strongSelf对真实内存区的引用也被释放。")]),a._v(" "),s("p",[a._v("使用案例：")]),a._v(" "),s("p",[a._v("例如：在SDWebimage的下载回调中，就是用了strongSelf来延迟block体操作对象的释放")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://rte.weiyun.baidu.com/wiki/attach/image/api/imageDownloadAddress?attachId=a2ea2f3dd1f0495a9a95c04c6a7097fa&docGuid=Otj87nZkAI3zo5&sign=eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIiwiYXBwSWQiOjEsInVpZCI6IkdKM2VhTER2X1oiLCJkb2NJZCI6Ik90ajg3blprQUkzem81In0..nf8Xac_QAkXUg2CG.6T3e3akzcMF1nwSJAareb2ZcHeHDjVRTt9UBM8lDEEdWQLcDzPQmM88S4YG-O0r0yhHr6vQLyStxzS6HBnUREkamFLVy0CeT-8lgMA-s9IjN4b4ir_FzVUZL9DKpDWAP8wrYlTN6-4xeLw-Vsh-Zxw6nWhiy0C94pdSNHriYyS5dquu3PZKoVyFvc5Pl2tUb_RWTxMaf9l-B9rUzJm4ZjfEoxQ.x45-pgY9BjSTih-0HbQDlg",alt:""}})]),a._v(" "),s("p",[a._v("早期的AFN请求完成完成回调")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('- (void)setCompletionBlock:(void (^)(void))block {\n    [self.lock lock];\n    if (!block) {\n        [super setCompletionBlock:nil];\n    } else {\n        __weak __typeof(self)weakSelf = self;\n        [super setCompletionBlock:^ {\n            __strong __typeof(weakSelf)strongSelf = weakSelf;\n\n#pragma clang diagnostic push\n#pragma clang diagnostic ignored "-Wgnu"\n            dispatch_group_t group = strongSelf.completionGroup ?: url_request_operation_completion_group();\n            dispatch_queue_t queue = strongSelf.completionQueue ?: dispatch_get_main_queue();\n#pragma clang diagnostic pop\n\n            dispatch_group_async(group, queue, ^{\n                block();\n            });\n\n            dispatch_group_notify(group, url_request_operation_completion_queue(), ^{\n                [strongSelf setCompletionBlock:nil];\n            });\n        }];\n    }\n    [self.lock unlock];\n}\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br"),s("span",{staticClass:"line-number"},[a._v("24")]),s("br"),s("span",{staticClass:"line-number"},[a._v("25")]),s("br"),s("span",{staticClass:"line-number"},[a._v("26")]),s("br")])]),s("h5",{attrs:{id:"nstimer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nstimer"}},[a._v("#")]),a._v(" NSTimer")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("@property (nonatomic, strong) NSTimer *timer;\n\n// Creates a timer and schedules it on the current run loop in the default mode.\nself.timer = [NSTimer scheduledTimerWithTimeInterval:1 target:weakSelf selector:@selector(doSomething) userInfo:nil repeats:YES];\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("苹果官方文档对NSTimer的target参数解释：\ntarget\nThe object to which to send the message specified by aSelector when the timer fires. The timer maintains a strong reference to target until it (the timer) is invalidated.\n当timer fire的时候会对`target`进行强持有，直到Timer是 invalidated\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("p",[a._v("如上，我们在创建NSTimer实例时，就会在默认的runloop中持有了一个timer，time在fire时，就会持有它的target（即self）")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://rte.weiyun.baidu.com/wiki/attach/image/api/imageDownloadAddress?attachId=c150217c824848cba033b1c4b002deb8&docGuid=Otj87nZkAI3zo5&sign=eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIiwiYXBwSWQiOjEsInVpZCI6IkdKM2VhTER2X1oiLCJkb2NJZCI6Ik90ajg3blprQUkzem81In0..nf8Xac_QAkXUg2CG.6T3e3akzcMF1nwSJAareb2ZcHeHDjVRTt9UBM8lDEEdWQLcDzPQmM88S4YG-O0r0yhHr6vQLyStxzS6HBnUREkamFLVy0CeT-8lgMA-s9IjN4b4ir_FzVUZL9DKpDWAP8wrYlTN6-4xeLw-Vsh-Zxw6nWhiy0C94pdSNHriYyS5dquu3PZKoVyFvc5Pl2tUb_RWTxMaf9l-B9rUzJm4ZjfEoxQ.x45-pgY9BjSTih-0HbQDlg",alt:""}})]),a._v(" "),s("p",[a._v("如果把对timer的引用改成弱引用可以不？")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://rte.weiyun.baidu.com/wiki/attach/image/api/imageDownloadAddress?attachId=99e8bff2865d449490e32acbeb0e8fdd&docGuid=Otj87nZkAI3zo5&sign=eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIiwiYXBwSWQiOjEsInVpZCI6IkdKM2VhTER2X1oiLCJkb2NJZCI6Ik90ajg3blprQUkzem81In0..nf8Xac_QAkXUg2CG.6T3e3akzcMF1nwSJAareb2ZcHeHDjVRTt9UBM8lDEEdWQLcDzPQmM88S4YG-O0r0yhHr6vQLyStxzS6HBnUREkamFLVy0CeT-8lgMA-s9IjN4b4ir_FzVUZL9DKpDWAP8wrYlTN6-4xeLw-Vsh-Zxw6nWhiy0C94pdSNHriYyS5dquu3PZKoVyFvc5Pl2tUb_RWTxMaf9l-B9rUzJm4ZjfEoxQ.x45-pgY9BjSTih-0HbQDlg",alt:""}})]),a._v(" "),s("p",[a._v("答案：不行，因为当NSTimer被分配之后，会被当前线程的Runloop进行强引用，如果对象以及NSTimer是在主线程创建的，就会被主线程的Runloop持有这个NSTimer，所以即使我们通过弱引用来指向NSTimer,但是由于主线程中Runloop常驻内存通过对NSTimer的强引用，再通过NSTimer对对象的强引用，仍然对这个对象产生了强引用，此时即使VC页面退出，去掉VC对对象的引用，当前VC仍然有被Runloop的间接强引用持有，这个对象也不会被释放，此时就产生了内存泄漏。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://rte.weiyun.baidu.com/wiki/attach/image/api/imageDownloadAddress?attachId=e2eb5d91a44b4bb3a48e07f32cf90304&docGuid=Otj87nZkAI3zo5&sign=eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIiwiYXBwSWQiOjEsInVpZCI6IkdKM2VhTER2X1oiLCJkb2NJZCI6Ik90ajg3blprQUkzem81In0..nf8Xac_QAkXUg2CG.6T3e3akzcMF1nwSJAareb2ZcHeHDjVRTt9UBM8lDEEdWQLcDzPQmM88S4YG-O0r0yhHr6vQLyStxzS6HBnUREkamFLVy0CeT-8lgMA-s9IjN4b4ir_FzVUZL9DKpDWAP8wrYlTN6-4xeLw-Vsh-Zxw6nWhiy0C94pdSNHriYyS5dquu3PZKoVyFvc5Pl2tUb_RWTxMaf9l-B9rUzJm4ZjfEoxQ.x45-pgY9BjSTih-0HbQDlg",alt:""}})]),a._v(" "),s("p",[a._v("左侧是Runloop对NSTimer的强引用，在NSTimer和VC对象中间添加一个中间对象，然后由NSTimer对中间对象进行强引用，同时中间对象分别对NSTimer和VC对象进行弱引用，当当前VC退出之后，VC就释放了，变为nil，当下次定时器的回调事件回来的时候，可以在中间对象当中，判断当前中间对象所持有的弱引用VC对象是否被释放了，实际上就是判断中间对象当中所持有的weak变量是否为nil，如果是nil，然后调用[NSTimer invalid]以及将NSTimer置为nil，就打破了Runloop对NSTimer的强引用以及NSTimer对中间对象的强引用。")]),a._v(" "),s("p",[a._v("这个解决方案是利用了：当一个对象被释放后，它的weak指针会自动置为nil")]),a._v(" "),s("p",[a._v("实现参考："),s("a",{attrs:{href:"https://www.jianshu.com/p/820e7a66f6a0",target:"_blank",rel:"noopener noreferrer"}},[a._v("内存管理-循环引用 - 简书"),s("OutboundLink")],1)]),a._v(" "),s("p",[a._v("解决方案2：")]),a._v(" "),s("p",[a._v("自定义一个作为消息传递中间者的Proxy（继承自NSProxy的类），并让这个Proxy弱持有真正的target，再把这个Proxy设为timer的target。Proxy会把消息转发给真正的target，而又因为是弱持有的，所以不出现循环引用（保留环）的问题。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("@interface YYTextWeakProxy : NSProxy\n\n/// The proxy target.\n@property (nullable, nonatomic, weak, readonly) id target;\n\n/// Creates a new weak proxy for target.\n- (instancetype)initWithTarget:(id)target;\n\n/// Creates a new weak proxy for target.\n+ (instancetype)proxyWithTarget:(id)target;\n\n@end\n\n@implementation YYTextWeakProxy\n\n- (instancetype)initWithTarget:(id)target {\n    _target = target;\n    return self;\n}\n\n+ (instancetype)proxyWithTarget:(id)target {\n    return [[YYTextWeakProxy alloc] initWithTarget:target];\n}\n\n- (id)forwardingTargetForSelector:(SEL)selector {\n    return _target;\n}\n\n- (void)forwardInvocation:(NSInvocation *)invocation {\n    void *null = NULL;\n    [invocation setReturnValue:&null];\n}\n\n- (NSMethodSignature *)methodSignatureForSelector:(SEL)selector {\n    return [NSObject instanceMethodSignatureForSelector:@selector(init)];\n}\n\n- (BOOL)respondsToSelector:(SEL)aSelector {\n    return [_target respondsToSelector:aSelector];\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br"),s("span",{staticClass:"line-number"},[a._v("24")]),s("br"),s("span",{staticClass:"line-number"},[a._v("25")]),s("br"),s("span",{staticClass:"line-number"},[a._v("26")]),s("br"),s("span",{staticClass:"line-number"},[a._v("27")]),s("br"),s("span",{staticClass:"line-number"},[a._v("28")]),s("br"),s("span",{staticClass:"line-number"},[a._v("29")]),s("br"),s("span",{staticClass:"line-number"},[a._v("30")]),s("br"),s("span",{staticClass:"line-number"},[a._v("31")]),s("br"),s("span",{staticClass:"line-number"},[a._v("32")]),s("br"),s("span",{staticClass:"line-number"},[a._v("33")]),s("br"),s("span",{staticClass:"line-number"},[a._v("34")]),s("br"),s("span",{staticClass:"line-number"},[a._v("35")]),s("br"),s("span",{staticClass:"line-number"},[a._v("36")]),s("br"),s("span",{staticClass:"line-number"},[a._v("37")]),s("br"),s("span",{staticClass:"line-number"},[a._v("38")]),s("br"),s("span",{staticClass:"line-number"},[a._v("39")]),s("br"),s("span",{staticClass:"line-number"},[a._v("40")]),s("br")])]),s("p",[a._v("这是 Apple 官方文档给 "),s("code",[a._v("NSProxy")]),a._v(" 的定义，"),s("code",[a._v("NSProxy")]),a._v(" 和 "),s("code",[a._v("NSObject")]),a._v(" 一样都是根类，它是一个抽象类，你可以通过继承它，并重写 "),s("code",[a._v("-forwardInvocation:")]),a._v(" 和 "),s("code",[a._v("-methodSignatureForSelector:")]),a._v(" 方法以实现消息转发到另一个实例。综上，"),s("code",[a._v("NSProxy")]),a._v(" 的目的就是负责将消息转发到真正的 target 的代理类。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://rte.weiyun.baidu.com/wiki/attach/image/api/imageDownloadAddress?attachId=177f8c7b3d0b417ca36416e21748f061&docGuid=Otj87nZkAI3zo5&sign=eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIiwiYXBwSWQiOjEsInVpZCI6IkdKM2VhTER2X1oiLCJkb2NJZCI6Ik90ajg3blprQUkzem81In0..nf8Xac_QAkXUg2CG.6T3e3akzcMF1nwSJAareb2ZcHeHDjVRTt9UBM8lDEEdWQLcDzPQmM88S4YG-O0r0yhHr6vQLyStxzS6HBnUREkamFLVy0CeT-8lgMA-s9IjN4b4ir_FzVUZL9DKpDWAP8wrYlTN6-4xeLw-Vsh-Zxw6nWhiy0C94pdSNHriYyS5dquu3PZKoVyFvc5Pl2tUb_RWTxMaf9l-B9rUzJm4ZjfEoxQ.x45-pgY9BjSTih-0HbQDlg",alt:""}})]),a._v(" "),s("p",[s("strong",[a._v("动态方法解析")])]),a._v(" "),s("p",[a._v("对象在收到无法解读的消息后，首先将调用其所属类的下列类方法：")]),a._v(" "),s("blockquote",[s("ul",[s("li",[a._v("(BOOL)resolveInstanceMethod:(SEL)selector")])])]),a._v(" "),s("p",[a._v("使用这种方法的前提是：相关方法的实现代码已经写好了，只等着运行的时候动态插入在类里面就可以了。")]),a._v(" "),s("p",[s("strong",[a._v("备援接受者")])]),a._v(" "),s("p",[a._v("当前接受者还有第二次机会能处理未知的选择子，在这一步中，运行期的系统会问它，能不能把这条消息转给其他接受者来处理。")]),a._v(" "),s("blockquote",[s("ul",[s("li",[a._v("(id)forwardingTargetForSelector:(SEL)selector")])])]),a._v(" "),s("p",[a._v("在一个对象内部，可能还有一些列其他对象，该对象可经由此方法将能够处理某选择子的相关内部对象返回。如果没有则返回nil。")]),a._v(" "),s("p",[s("strong",[a._v("完整的消息转发机制")])]),a._v(" "),s("p",[a._v("如果forwardingTargetForSelector:方法没有处理，会来到methodSignatureForSelector:方法，该方法可以返回一个方法签名，返回后，程序会继续调用forwardInvocation:方法。如果forwardInvocation:方法也没处理，程序就抛出异常")]),a._v(" "),s("blockquote",[s("ul",[s("li",[s("p",[a._v("(NSMethodSignature *)methodSignatureForSelector:(SEL)selector")])]),a._v(" "),s("li",[s("p",[a._v("(void)forwardInvocation:(NSInvocation *)invocation")])])])]),a._v(" "),s("p",[a._v("问题：")]),a._v(" "),s("p",[a._v("当不能识别方法的时候，就会调用"),s("em",[a._v("forwardingTargetForSelector")]),a._v("这个方法，在这个方法中，我们可以将不能识别的传递给其它对象处理，由于这里对所有的不能处理方法的都传递给_target了，所以"),s("em",[a._v("methodSignatureForSelector")]),a._v("和"),s("em",[a._v("forwardInvocation")]),a._v("不可能被执行的，所以不用再重载了吧？")]),a._v(" "),s("p",[a._v("其实还是需要重载"),s("em",[a._v("methodSignatureForSelector")]),a._v("和"),s("em",[a._v("forwardInvocation")]),a._v("的，为什么呢？因为_target是弱引用的，所以当_target可能释放了，当它被释放了的情况下，那么"),s("em",[a._v("forwardingTargetForSelector")]),a._v("就是返回nil了。然后"),s("em",[a._v("methodSignatureForSelector")]),a._v("和forwardInvocation没实现的话，就直接crash了!!! 这也是为什么这两个方法中随便写的!!!")]),a._v(" "),s("p",[a._v("参考链接：")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://blog.csdn.net/yohunl/article/details/50614903",target:"_blank",rel:"noopener noreferrer"}},[a._v("NSTimer和实现弱引用的timer的方式_vc弱引用nstimer-CSDN博客"),s("OutboundLink")],1)]),a._v(" "),s("p",[s("a",{attrs:{href:"https://blog.csdn.net/shawjan/article/details/45478901",target:"_blank",rel:"noopener noreferrer"}},[a._v("[iOS进阶]iOS消息机制-CSDN博客"),s("OutboundLink")],1)]),a._v(" "),s("p",[a._v("使用案例：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("self.tipViewTimer = [NSTimer scheduledTimerWithTimeInterval:time\n                                                     target:[YYTextWeakProxy proxyWithTarget:self]\n                                                   selector:@selector(tipViewTimerAction)\n                                                   userInfo:nil\n                                                    repeats:YES];\n[[NSRunLoop currentRunLoop] addTimer:self.tipViewTimer forMode:NSRunLoopCommonModes];\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br")])]),s("h3",{attrs:{id:"四、不会产生循环引用的场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、不会产生循环引用的场景"}},[a._v("#")]),a._v(" 四、不会产生循环引用的场景")]),a._v(" "),s("h5",{attrs:{id:"afn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#afn"}},[a._v("#")]),a._v(" AFN")]),a._v(" "),s("p",[a._v("我们使用[AFHTTPSessionManager manager]发起网络请求，在函数中，AFHTTPSessionManager * manager是一个局部变量，随着函数栈的调用结束，这个局部变量也就被回收了，故self并没有持")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// AFN GET请求\nAFHTTPSessionManager *manager = [AFHTTPSessionManager manager];\n[manager GET:url parameters:params headers:header progress:^(NSProgress * _Nonnull downloadProgress) {\n\n} success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {\n\n} failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {\n\n}];\n\n+ (instancetype)manager {\n    return [[[self class] alloc] initWithBaseURL:nil];\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br")])]),s("p",[a._v("在GET的调用过程中，对success，failure并没有做什么操作。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('// GET请求源码1\n- (NSURLSessionDataTask *)GET:(NSString *)URLString\n                   parameters:(nullable id)parameters\n                      headers:(nullable NSDictionary <NSString *, NSString *> *)headers\n                     progress:(nullable void (^)(NSProgress * _Nonnull))downloadProgress\n                      success:(nullable void (^)(NSURLSessionDataTask * _Nonnull, id _Nullable))success\n                      failure:(nullable void (^)(NSURLSessionDataTask * _Nullable, NSError * _Nonnull))failure\n{\n    NSURLSessionDataTask *dataTask = [self dataTaskWithHTTPMethod:@"GET"\n                                                        URLString:URLString\n                                                       parameters:parameters\n                                                          headers:headers\n                                                   uploadProgress:nil\n                                                 downloadProgress:downloadProgress\n                                                          success:success\n                                                          failure:failure];\n\n    [dataTask resume];\n    return dataTask;\n}\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br")])]),s("p",[a._v("来到dataTaskWithHTTPMethod里，发现31-40行，发现dataTask也没有持有success，failure，只是当成一个普通的block，然后调用了这个block而已。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// 源码2\n- (NSURLSessionDataTask *)dataTaskWithHTTPMethod:(NSString *)method\n                                       URLString:(NSString *)URLString\n                                      parameters:(nullable id)parameters\n                                         headers:(nullable NSDictionary <NSString *, NSString *> *)headers\n                                  uploadProgress:(nullable void (^)(NSProgress *uploadProgress)) uploadProgress\n                                downloadProgress:(nullable void (^)(NSProgress *downloadProgress)) downloadProgress\n                                         success:(nullable void (^)(NSURLSessionDataTask *task, id _Nullable responseObject))success\n                                         failure:(nullable void (^)(NSURLSessionDataTask * _Nullable task, NSError *error))failure\n{\n    NSError *serializationError = nil;\n    NSMutableURLRequest *request = [self.requestSerializer requestWithMethod:method URLString:[[NSURL URLWithString:URLString relativeToURL:self.baseURL] absoluteString] parameters:parameters error:&serializationError];\n    for (NSString *headerField in headers.keyEnumerator) {\n        [request setValue:headers[headerField] forHTTPHeaderField:headerField];\n    }\n    if (serializationError) {\n        if (failure) {\n            dispatch_async(self.completionQueue ?: dispatch_get_main_queue(), ^{\n                failure(nil, serializationError);\n            });\n        }\n\n        return nil;\n    }\n\n    __block NSURLSessionDataTask *dataTask = nil;\n    dataTask = [self dataTaskWithRequest:request\n                          uploadProgress:uploadProgress\n                        downloadProgress:downloadProgress\n                       completionHandler:^(NSURLResponse * __unused response, id responseObject, NSError *error) {\n        if (error) {\n            if (failure) {\n                failure(dataTask, error);\n            }\n        } else {\n            if (success) {\n                success(dataTask, responseObject);\n            }\n        }\n    }];\n\n    return dataTask;\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br"),s("span",{staticClass:"line-number"},[a._v("24")]),s("br"),s("span",{staticClass:"line-number"},[a._v("25")]),s("br"),s("span",{staticClass:"line-number"},[a._v("26")]),s("br"),s("span",{staticClass:"line-number"},[a._v("27")]),s("br"),s("span",{staticClass:"line-number"},[a._v("28")]),s("br"),s("span",{staticClass:"line-number"},[a._v("29")]),s("br"),s("span",{staticClass:"line-number"},[a._v("30")]),s("br"),s("span",{staticClass:"line-number"},[a._v("31")]),s("br"),s("span",{staticClass:"line-number"},[a._v("32")]),s("br"),s("span",{staticClass:"line-number"},[a._v("33")]),s("br"),s("span",{staticClass:"line-number"},[a._v("34")]),s("br"),s("span",{staticClass:"line-number"},[a._v("35")]),s("br"),s("span",{staticClass:"line-number"},[a._v("36")]),s("br"),s("span",{staticClass:"line-number"},[a._v("37")]),s("br"),s("span",{staticClass:"line-number"},[a._v("38")]),s("br"),s("span",{staticClass:"line-number"},[a._v("39")]),s("br"),s("span",{staticClass:"line-number"},[a._v("40")]),s("br"),s("span",{staticClass:"line-number"},[a._v("41")]),s("br"),s("span",{staticClass:"line-number"},[a._v("42")]),s("br"),s("span",{staticClass:"line-number"},[a._v("43")]),s("br")])]),s("h5",{attrs:{id:"masonry"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#masonry"}},[a._v("#")]),a._v(" Masonry")]),a._v(" "),s("p",[a._v("由源码可以看出：Masonry中设置布局的方法中的block对象并没有被View所引用，而是直接在方法内部同步执行，执行完以后block将释放，其中捕捉的外部变量的引用计数也将还原到之前。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('/// 调用\n[self.containerView mas_makeConstraints:^(MASConstraintMaker *make) {\n   make.bottom.mas_equalTo(0);\n   make.top.mas_equalTo(TBCPadding(M_H_X002));\n   make.left.mas_equalTo(TBCPadding(M_W_X004));\n   make.right.mas_equalTo(-TBCPadding(M_W_X004));\n}];\n\n/// Masonry源码\n#import "View+MASAdditions.h"\n#import <objc/runtime.h>\n\n@implementation MAS_VIEW (MASAdditions)\n\n- (NSArray *)mas_makeConstraints:(void(^)(MASConstraintMaker *))block {\n    self.translatesAutoresizingMaskIntoConstraints = NO;\n    MASConstraintMaker *constraintMaker = [[MASConstraintMaker alloc] initWithView:self];\n    block(constraintMaker);\n    return [constraintMaker install];\n}\n\n- (NSArray *)mas_updateConstraints:(void(^)(MASConstraintMaker *))block {\n    self.translatesAutoresizingMaskIntoConstraints = NO;\n    MASConstraintMaker *constraintMaker = [[MASConstraintMaker alloc] initWithView:self];\n    constraintMaker.updateExisting = YES;\n    block(constraintMaker);\n    return [constraintMaker install];\n}\n\n- (NSArray *)mas_remakeConstraints:(void(^)(MASConstraintMaker *make))block {\n    self.translatesAutoresizingMaskIntoConstraints = NO;\n    MASConstraintMaker *constraintMaker = [[MASConstraintMaker alloc] initWithView:self];\n    constraintMaker.removeExisting = YES;\n    block(constraintMaker);\n    return [constraintMaker install];\n}\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br"),s("span",{staticClass:"line-number"},[a._v("24")]),s("br"),s("span",{staticClass:"line-number"},[a._v("25")]),s("br"),s("span",{staticClass:"line-number"},[a._v("26")]),s("br"),s("span",{staticClass:"line-number"},[a._v("27")]),s("br"),s("span",{staticClass:"line-number"},[a._v("28")]),s("br"),s("span",{staticClass:"line-number"},[a._v("29")]),s("br"),s("span",{staticClass:"line-number"},[a._v("30")]),s("br"),s("span",{staticClass:"line-number"},[a._v("31")]),s("br"),s("span",{staticClass:"line-number"},[a._v("32")]),s("br"),s("span",{staticClass:"line-number"},[a._v("33")]),s("br"),s("span",{staticClass:"line-number"},[a._v("34")]),s("br"),s("span",{staticClass:"line-number"},[a._v("35")]),s("br"),s("span",{staticClass:"line-number"},[a._v("36")]),s("br")])]),s("h5",{attrs:{id:"系统uiview类动画"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#系统uiview类动画"}},[a._v("#")]),a._v(" 系统UIView类动画")]),a._v(" "),s("p",[a._v("UIView动画block不会造成循环引用是因为这是类方法，不可能强引用一个类，所以不会造成循环引用。")]),a._v(" "),s("p",[a._v("UIView中的block持有当前控制器，但是当前控制器中是没有持有UIView类的，没有形成循环。当动画结束时，UIView会结束持有这个block，如果没有别的对象持有block的话，block对象就会被释放掉，从而block会释放掉对self的持有，整个内存引用关系被解除。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[UIView animateWithDuration:0.25 animations:^{\n    [self.refreshHeaderView setPullToRefreshState:TBCPullToRefreshHeaderViewStateLoading];\n    self.contentComponent.top = self.segmentComponent.height + kTBCHybridFrsRefreshHeaderViewHeight;\n}];\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("h5",{attrs:{id:"gcd相关的一些代码块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gcd相关的一些代码块"}},[a._v("#")]),a._v(" GCD相关的一些代码块")]),a._v(" "),s("p",[a._v("没有对象持有dispatch_after，所以在dispatch_after里面使用self是不构成循环引用。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])])])}),[],!1,null,null,null);s.default=r.exports}}]);