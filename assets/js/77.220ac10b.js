(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{421:function(t,e,i){"use strict";i.r(e);var r=i(4),s=Object(r.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"git-pull-和-git-fetch的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-pull-和-git-fetch的区别"}},[t._v("#")]),t._v(" git pull 和 git fetch的区别")]),t._v(" "),e("p",[t._v("命令从中央仓库的某个分支拉出新的修改或提交，并更新你的仓库。Git pull 命令从中央仓库的某个特定分支拉取新的修改或提交，并更新本地仓库中的目标分支。另一方面，git fetch 也用于同样的目的，但它的工作方式略有不同。")]),t._v(" "),e("p",[t._v("当你执行git fetch时，它从所需的分支拉出所有新的提交，并将其存储在本地仓库的一个新分支中。如果您想在目标分支中反映这些变化，git fetch 之后必须进行 git merge。你的目标分支只有在合并了目标分支和取来的分支之后才会被更新。")]),t._v(" "),e("h2",{attrs:{id:"git-reset-和-git-revert有何区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-和-git-revert有何区别"}},[t._v("#")]),t._v(" Git reset 和 git Revert有何区别")]),t._v(" "),e("p",[t._v('Git reset 是一个强大的命令，用于撤销对 Git 仓库状态的局部修改。Git 重置的操作对象是 "Git 的三棵树"，即：提交历史（HEAD）、暂存索引和工作目录。')]),t._v(" "),e("p",[t._v("Git的Revert命令创建了一个新的提交，撤销了前一个提交的修改。这个命令为项目添加了一个新的历史。它并不修改现有的历史。")])])}),[],!1,null,null,null);e.default=s.exports}}]);